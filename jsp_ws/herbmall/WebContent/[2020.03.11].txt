[2020.03.11]
--------------
1강의

- 자료형: 변수의 크기와 종류를 정한다
- 기본 자료형: byte, short, int, long, char, float, double, boolean
  * 숫자: 정수 또는 실수
  * 문자
  * 논리

byte -127
short -32만
int -21억
long -922경

char

boolean

float: 소수 점 7 이하까지
double: 소수 점 15 이하까지
------------------------------------------------------------------------
2.강의
public class VarTest2
{
	public static void main(String[] args)
	//자료형
	//1.정수형
	{
		/*
			기본 자료형의 종류
			[1] 숫자형
				1)정수형
					byte 1 byte -128
					short 2 byte -3만2천
					int 4 byte -21억
					long 9 byte -922경
				2)실수형 - 정밀도에 의해 결정
					float 4 byte 소수이하 7째 자리까지 유효
					double 8 byte 소수 이하 15 자리까지 유효
			[2] 문자형
				cahr 2 byte 한글이나 영문 모두 1글자
							해당 유니코드가 들어감
			[3] 논리형
				boolean 1 byte 참, 거짓이 들어감
				
		*/

		//1.정수형
		byte b=127;
		short sh=32000;
		int i=2100000000;
		long o=21000000000L;
		//int형 값의 범위를 넘어서는 경우에는 소문자 l이나 대문자 L을 붙여야함

		long n=b*sh*i;//byte*short*int=>int*int*int=>int
		//=>연산시 가장 큰 범위의 자료형으로 자동 형변환됨
		long g=(long)b*sh*i;//long*short*int=>long*long*long=>long

		System.out.println("b*sh*i="+n);
		System.out.println("(long)b*sh*i="+g);

		//byte by=128;//error
		byte by2=127;
		by2++; //by2=by2+1, byte 값의 범위를 벗어나므로 garbage 값이 들어감
		//++은 값의 하나를 더하라는 뜻

		System.out.println("by2++=>"+by2);


	}
}
-----------------------------------------------------------------------------------------------------
3.강의
class VarTest3
{
	public static void main(String[]args)
	{
		//2.실수형
		float f=3.14F;//float 변수의 값에는 F나 f를 붙여야함
		//안그러면 double로 인식

		double d=3.141592;

		double a=f*d;//float*double=>double*double=>double
		System.out.println("f="+f+",d="+d+"f*d="+a);

		float f1=22f, f2=3f;
		float f3=f1/f2;
		System.out.println("f1/f2="+f3);

		double d1=22, d2=3;
		double d3=d1/d2;
		System.out.println("d1="+d1+",d2="+d2+",d1/d2="+d3);

		float k=.456f;
		double n=789;
		//double형은 정수(int)를 입력 받더라도 자동으로 double 형으로 형분환되어 소수점 .0이 붙게된다
		System.out.println("k="+k+",n="+n);

		//실수형(float,double)-소수이하 정밀도와 관련있다
	}

}
--------------------------------------------------------------------------------------------------------------
4.강의
public class VarTest4
{
	public static void main(String[] args)
	{
		//3.논리형
		//자바의 논리형은 0,1로 호환되지 않는다
		boolean bool=true;
		System.out.println("bool="+bool);

		int a=3, b=7;
		boolean h=a>b; //false
		System.out.println("a="+a+",b="+b);
		System.out.println("a>b=>"+h);

	}
}
-------------------------------------------------------------------------------------------------------------------
5.강의
public class VarTest5
{
	public static void main(String[] args)
	{
		//0=45   A=65
		//4.문자형 -char
		//영문이나 한글 1글자(문자 하나)만 들어감=> 해당 유니코드값이 들어감
		//2byte

		char ch='A';//A에 해당하는 유니코드 값이 들어감
		//=> char는 실상은 숫자형, 연산도 가능
		//=> char 변수위 값은 반드시 '로 감싸야 함
		char ch2='가';
		//char ch3='abc';//error: 한 글자만 들어가야 함
		
		System.out.println("ch="+ch+",ch2="+ch2);
		System.out.println(ch+1);//'A'+1=>65+1=>66

		int k=ch+2;//65+2=>67
		char c=(char)k;//c

		System.out.println("ch+2=>"+k);
		System.out.println("(char)k="+c);

		char ch4=97;//직접 유니코드값을 넣는 것도 가능
		System.out.println("ch4="+ch4+",(int)ch4="+(int)ch4);
	}
}
-------------------------------------------------------------------------------------------------------------------------
6.강의
public class VarTest6
{
	public static void main(String[] args)
	{
		//String
		//참조형 - 문자열을 다룰 때 사용하는 자료형으로 기본자료형이 아닌 참조형이다
		//연속의 문자를 넣을 수 있다
		//문자열을 ""(큰 따옴표)로 감싸야 함
		String name="홍길동";
		System.out.println("이름은"+name);

		int year=2020;
		String today="2020년03월11일";
		System.out.println("올해 연도:"+year);
		System.out.println("현재 일자:"+today);
		System.out.println(10 + 30 + 70+" = 10+30+70"); 
		

		//+: 피연산자가 숫자일때는 덧셈
		// 피연산자에 문자열이 있으면 문자열 연결 연산자
		int num1=7,num2=9;
		System.out.println(num1+num2+"<=결과");
		System.out.println((num1+num2)+"<=결과");
		System.out.println("결과=>"+num1+num2);
		System.out.println("결과=>"+(num1+num2));
	}
}
------------------------------------------------------------------------------------------------------------------------------
7.강의
public class VarTest7
{
	public static void main(String[] args)
	{
		String name="홍길동";
		int age=20;
		String tel="010-100-2000";
		String address="당산동";

		System.out.print("이름 : "+name);
		System.out.println(",  나이 : "+age);
		System.out.print("전화번호 : "+tel);
		System.out.println(",  주소 : "+address);


		String product="휴대폰";
		byte a=15;
		int b=260000;
		long c=350000L;

		System.out.print("상품 : "+product);
		System.out.println(",  수량 : "+a);
		System.out.print("원가 : "+b);
		System.out.print(",  판매가격 : "+c);

	}
}
---------------------------------------------------------------------
8.강의
public class VarTest8
{
	public static void main(String[] args)
	{
		char c='A';
		float f=2.3F;
		double d=2.344;
		byte b=2;
		short s=2100;
		long l=23232323;
		String st="안녕하세요";
		boolean boo=d>b;

		System.out.println(c);
		System.out.println(f);
		System.out.println(d);
		System.out.println(b);
		System.out.println(s);
		System.out.println(st);
		System.out.println(boo);

	}
}
--------------------------------------------------------------------
9.강의
public class VarTest9
{
	public static void main(String[] args)
	{
		String id="hong";
		int pw=1234;

		System.out.println("아이디 : "+id);
		System.out.println("비밀번호 : "+pw);

		float f=3.14F;
		char ch='a';
		long lo=12, ng=13;
		String s="안녕", t="하세요";

		System.out.println(s+t);
		System.out.println(lo);
		System.out.println(ng);
	}
}
---------------------------------------------------------------------
10.강의
public class VarMaxMin
{
	public static void main(String[] args)
	{
		//Wrapper Class- 자료형을 대체하는 클래스
		//-기본 자료형을 객체로 다루어야 하는 경우 사용
		//Byte,Short,Interger,Long,Float,Double,Character,Boolean

		byte b1=Byte.MAX_VALUE;
		byte b2=Byte.MIN_VALUE;
		//max 값에 +1을 집어 넣으면 garbage 값이 나온다

		int k=Integer.MAX_VALUE;
		int n=Integer.MIN_VALUE;

		char ch1=Character.MAX_VALUE;
		char ch2=Character.MIN_VALUE;

		System.out.println("byte 최소값: "+b2+", 최대값 : "+b1);
		System.out.println("itn 최소값: "+n+", 최대값 : "+k);
		System.out.println("char 최소값: "+ch2+", 코드값 : "+(int)ch2);
		System.out.println("char 최대값 :"+ch1+", 코드값 :"+(int)ch1);

	}
}
------------------------------------------------------------------------------
11.강의
public class EscTest
{
	public static void main(String[] args)
	{
		//Escape Sequence-문자열안에서 특별한 의미로 해석되는 문자
		//-표현하기 어려운 문자상수를 표현하는 방법
		/*
		\n : 개행, 줄바꿈
		\t : 탭(Tab)
		\" : 큰 따움표
		\\ : 역슬러시
		*/

		String s="Hello\t\"java\"!!!";
		String path="d:\\test\\upload";
		System.out.println(s);
		System.out.println("파일 경로 =>"+path);
		System.out.println("안녕\nHi\n\njsp!!!");
		System.out.print("spring\n");
		System.out.println("!!!!");
	}
}
-------------------------------------------------------------------------------------
12.강의
