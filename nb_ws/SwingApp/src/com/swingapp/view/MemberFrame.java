/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.swingapp.view;

import com.swingapp.member.model.MemberDAO;
import com.swingapp.member.model.MemberDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class MemberFrame extends javax.swing.JFrame implements ActionListener, ItemListener {

    private String[] emailArr = {"naver.com", "nate.com", "daum.net", "gmail.com", "직접입력"};
    private LoginGUI2 loginGui;
    private MemberDAO dao = new MemberDAO();
    private boolean isDuplicate; //중복확인 여부
    private String userid;
    private int memFlag;
    private static final int MEMBER_REGISTER=1; //회원가입
    private static final int MEMBER_EDIT=2;     //회원수정
    
    public boolean getIsDuplicate() {
        return isDuplicate;
    }

    public void setIsDuplicate(boolean isDuplicate) {
        this.isDuplicate = isDuplicate;
    }

    /**
     * Creates new form MemberFrame
     */
    public MemberFrame() {
        initComponents();

        init();
        addEvent();

    }

    public MemberFrame(LoginGUI2 loginGui) {
        this();

        this.loginGui = loginGui;
        memFlag=MEMBER_REGISTER;
    }

    //회원수정시 사용
    public MemberFrame(String userid) {
        this();
        this.userid=userid;
        memFlag=MEMBER_EDIT;
        //회원가입시 이름 아이디 비번 건들 수 없게하기
        settingMember();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfUserid = new javax.swing.JTextField();
        tfEmail1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfEmail3 = new javax.swing.JTextField();
        cbEmail2 = new javax.swing.JComboBox<>();
        btDup = new javax.swing.JButton();
        cbHp1 = new javax.swing.JComboBox<>();
        tfHp2 = new javax.swing.JTextField();
        tfHp3 = new javax.swing.JTextField();
        tfZipcode = new javax.swing.JTextField();
        tfAddress1 = new javax.swing.JTextField();
        tfAddress2 = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btZipcode = new javax.swing.JButton();
        tfPwd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("회원가입");

        jLabel1.setText("이름");

        jLabel2.setText("아이디");

        jLabel3.setText("비밀번호");

        jLabel4.setText("이메일");

        jLabel5.setText("전화번호");

        jLabel6.setText("우편번호");

        jLabel7.setText("주소");

        jLabel8.setText("상세주소");

        jLabel9.setText("@");

        cbEmail2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEmail2ActionPerformed(evt);
            }
        });

        btDup.setText("중복확인");

        cbHp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "010", "011", "016" }));
        cbHp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHp1ActionPerformed(evt);
            }
        });

        btAdd.setText("회원가입");

        btCancel.setText("취소");

        btZipcode.setText("우편번호 찾기");

        tfPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPwdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbEmail2, 0, 95, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfAddress1)
                            .addComponent(tfAddress2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(cbHp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tfHp2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tfHp3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(tfName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                                .addComponent(tfUserid, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btDup))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tfZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btZipcode))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btAdd)
                        .addGap(37, 37, 37)
                        .addComponent(btCancel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDup))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbHp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btZipcode)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tfAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdd)
                    .addComponent(btCancel))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbHp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbHp1ActionPerformed

    private void tfPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPwdActionPerformed

    private void cbEmail2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEmail2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEmail2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btDup;
    private javax.swing.JButton btZipcode;
    public javax.swing.JComboBox<String> cbEmail2;
    private javax.swing.JComboBox<String> cbHp1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JTextField tfAddress1;
    private javax.swing.JTextField tfAddress2;
    private javax.swing.JTextField tfEmail1;
    private javax.swing.JTextField tfEmail3;
    private javax.swing.JTextField tfHp2;
    private javax.swing.JTextField tfHp3;
    private javax.swing.JTextField tfName;
    private javax.swing.JPasswordField tfPwd;
    public javax.swing.JTextField tfUserid;
    public javax.swing.JTextField tfZipcode;
    // End of variables declaration//GEN-END:variables

    private void addEvent() {
        btAdd.addActionListener(this);
        btCancel.addActionListener(this);
        btDup.addActionListener(this);
        btZipcode.addActionListener(this);
        
        cbEmail2.addItemListener(this);
        
    }

    private void init() {
        //맨 앞에 있는 창만 닫기
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        /*
        cbHp1.addItem("010");
        cbHp1.addItem("011");
        cbHp1.addItem("016");
         */

        DefaultComboBoxModel cbModel = new DefaultComboBoxModel(emailArr);
        cbEmail2.setModel(cbModel);
        
        tfEmail3.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btAdd) {
            try {
                //회원가입
                register();

            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else if (e.getSource() == btCancel) {
            clear_tf();
        } else if (e.getSource() == btDup) {
            //중복확인
            SubUserid f = new SubUserid(this, tfUserid.getText());
            f.setVisible(true);

        } else if (e.getSource() == btZipcode) {
            //우편번호 찾기
            SubZipcode f = new SubZipcode(this);
            f.setVisible(true);
        }

    }

    private void register() throws SQLException {
        //1
        String address1 = tfAddress1.getText();
        String address2 = tfAddress2.getText();
        String email1 = tfEmail1.getText();
        String email2 = tfEmail3.getText();
        String hp2 = tfHp2.getText();
        String hp3 = tfHp3.getText();
        String name = tfName.getText();
        String pwd = tfPwd.getText();
        String userid = tfUserid.getText();
        String zipcode = tfZipcode.getText();
        String email3 = cbEmail2.getSelectedItem().toString();
        String hp1 = cbHp1.getSelectedItem().toString();

        if (name == null || name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "이름을 입력하세요");
            tfName.requestFocus();
            return;
        }
        if (userid == null || userid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요");
            tfUserid.requestFocus();
            return;
        }
        if (pwd == null || pwd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "비밀번호를 입력하세요");
            tfPwd.requestFocus();
            return;
        }
        if (!isDuplicate) {
            JOptionPane.showMessageDialog(this, "중복확인을 하세요");
            btDup.requestFocus();
            return;
        }

        String hp = "", email = "";
        if (hp2 != null && !hp2.isEmpty() && hp3 != null && !hp3.isEmpty()) {
            hp = hp1 + "-" + hp2 + "-" + hp3;
        }

        if (email1 != null && !email1.isEmpty()) {
            if (email2.equals("직접입력")) {
                if (email3 != null && !email3.isEmpty()) {
                    email = email1 + "@" + email3;
                }
            } else {
                email = email1 + "@" + email2;
            }
        }

        //2
        MemberDTO dto = new MemberDTO();
        dto.setAddress1(address1);
        dto.setAddress2(address2);
        dto.setEmail(email);
        dto.setHp(hp);
        dto.setName(name);
        dto.setPwd(pwd);
        dto.setUserid(userid);
        dto.setZipcode(zipcode);

        int cnt = dao.insertMember(dto);

        //3
        String result = "";

        if (cnt > 0) {
            result = "회원가입되었습니다.";
            JOptionPane.showMessageDialog(this, result);
            this.dispose();
            loginGui.tfUserid.setText(tfUserid.getText());
        } else {
            result = "회원가입실패!";
            JOptionPane.showMessageDialog(this, result);
        }

        JOptionPane.showMessageDialog(this, result);
    }

    private void clear_tf() {

    }

    private void settingMember() {//회원정보 수정
        if(memFlag==MEMBER_REGISTER){
            setTitle("회원가입");
            btAdd.setText("회원가입");
            tfName.setEditable(true);
            tfUserid.setEditable(true);
            tfPwd.setEditable(true);
            btDup.setEnabled(true);
            
        }else if(memFlag==MEMBER_EDIT){
            setTitle("회원 정보 수정");
            btAdd.setText("수정");
            tfName.setEditable(false);
            tfUserid.setEditable(false);
            tfPwd.setEditable(false);
            btDup.setEnabled(false);
               tfUserid.setText(userid);
            
            try {
                showMember();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        
    }

    private void showMember() throws SQLException {
        //1.
        //2.
        MemberDTO dto = dao.selectMember(userid);
        
        //3.
        tfAddress1.setText(dto.getAddress1());
        tfAddress2.setText(dto.getAddress2());
        tfName.setText(dto.getName());
        tfZipcode.setText(dto.getZipcode());
        tfUserid.setText(dto.getUserid());
        
        String email=dto.getEmail();
        String hp=dto.getHp();
        
        if(hp!= null && !hp.isEmpty()){
            String[] hpArr=hp.split("-");
            tfHp2.setText(hpArr[1]);
            tfHp3.setText(hpArr[2]);
            cbHp1.setSelectedItem(hpArr[0]);
    }
            if(email!=null && !email.isEmpty()){
            String[] emails=email.split("@");
            
            tfEmail1.setText(emails[0]);
            
            String email2 = emails[1];
            boolean emailExist=false;
            for(int i=0;i<emailArr.length;i++){
                if(email2.equals(emailArr[i])){
                    emailExist=true;
                    break;
                }
            }//for
            
            if(emailExist){
                cbEmail2.setSelectedItem(email2);
                
            }else{
                cbEmail2.setSelectedItem("직접입력");
                tfEmail3.setText(email2);
                tfEmail3.setEnabled(true);
            }
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if(e.getSource()==cbEmail2){
            if(e.getStateChange()==ItemEvent.SELECTED){
                String selItem=cbEmail2.getSelectedItem().toString();
                if(selItem.equals("직접입력")){
                    tfEmail3.setEnabled(true);
                    tfEmail3.requestFocus();
                    tfEmail3.setText("");
                }else{
                    tfEmail3.setText("");
                    tfEmail3.setEnabled(false);
                }
            }
        }
        
    }
}
